// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StudentManagementMVC.Data;

#nullable disable

namespace StudentManagementMVC.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("StudentManagementMVC.Models.Grade", b =>
                {
                    b.Property<int>("GradeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("GradeDate")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("GradeValue")
                        .HasColumnType("decimal(5,2)");

                    b.Property<string>("LetterGrade")
                        .HasMaxLength(2)
                        .HasColumnType("TEXT");

                    b.Property<int>("StudentID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Subject")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("GradeID");

                    b.HasIndex("StudentID");

                    b.ToTable("Grades");

                    b.HasData(
                        new
                        {
                            GradeID = 1,
                            Comments = "Excellent understanding of algorithms",
                            GradeDate = new DateTime(2024, 3, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeValue = 95.5m,
                            LetterGrade = "A",
                            StudentID = 1,
                            Subject = "Data Structures"
                        },
                        new
                        {
                            GradeID = 2,
                            Comments = "Good work on MVC project",
                            GradeDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeValue = 88.0m,
                            LetterGrade = "B",
                            StudentID = 1,
                            Subject = "Web Development"
                        },
                        new
                        {
                            GradeID = 3,
                            Comments = "Strong mathematical foundation",
                            GradeDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GradeValue = 92.0m,
                            LetterGrade = "A",
                            StudentID = 2,
                            Subject = "Calculus"
                        });
                });

            modelBuilder.Entity("StudentManagementMVC.Models.Student", b =>
                {
                    b.Property<int>("StudentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Branch")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EnrollmentDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Section")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.HasKey("StudentID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            StudentID = 1,
                            Branch = "Computer Science",
                            Email = "john.smith@university.edu",
                            EnrollmentDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Name = "John Smith",
                            Section = "A"
                        },
                        new
                        {
                            StudentID = 2,
                            Branch = "Engineering",
                            Email = "sarah.johnson@university.edu",
                            EnrollmentDate = new DateTime(2023, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Female",
                            Name = "Sarah Johnson",
                            Section = "B"
                        },
                        new
                        {
                            StudentID = 3,
                            Branch = "Business Administration",
                            Email = "mike.davis@university.edu",
                            EnrollmentDate = new DateTime(2024, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Gender = "Male",
                            Name = "Mike Davis",
                            Section = "A"
                        });
                });

            modelBuilder.Entity("StudentManagementMVC.Models.Grade", b =>
                {
                    b.HasOne("StudentManagementMVC.Models.Student", "Student")
                        .WithMany("Grades")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Student");
                });

            modelBuilder.Entity("StudentManagementMVC.Models.Student", b =>
                {
                    b.Navigation("Grades");
                });
#pragma warning restore 612, 618
        }
    }
}
